buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.rapidminer.com/content/groups/public/' }
    }
}

plugins {
    id 'com.rapidminer.extension' version '0.9.3'
    id 'war'
}

// Define Maven artifact repositories
repositories {
    jcenter()
    maven { url 'https://maven.rapidminer.com/content/groups/public/' }
}

extensionConfig {
    // The extension name
    name = 'Information Selection'
    //The namespace
    namespace = 'prules'
    //Version id
    version = '8.1.0'

    /*
     * The artifact group which will be used when publishing the extensions Jar
     * and for package customization when initializing the project repository.
     *
     */
    groupId = 'org.prules'

    /*
     * The extension vendor which will be displayed in the extensions about box
     * and for customizing the license headers when initializing the project repository.
     *
     */
    vendor = "Silesian University of Technology, Marcin Blachnik"

    /*
     * The vendor homepage which will be displayed in the extensions about box
     * and for customizing the license headers when initializing the project repository.
     *
     */
    homepage = "www.prules.org"

    // define RapidMiner version and extension dependencies
    dependencies {
        rapidminer '9.0.0'
        //extension namespace: 'text', version: '8.1.0'
    }
}

//Setting properties
def EXTENSIONS_PATH = '\\.RapidMiner\\extensions\\'
def PROP_HOME = 'paths.homeDirDebug'
def PROP_HOME_DEBUG = 'paths.homeDir'
def PROP_PROGRAM = 'paths.RapidMiner'
import java.nio.file.Paths

Properties props = new Properties()
def propFile = file('user.properties')
def usersHomeDirDebug = Paths.get(System.getProperty('user.home'))
def  usersHomeDir = usersHomeDirDebug
def  rapidMinerDir = 'C:/Program Files/RapidMiner/RapidMiner Studio'
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null) {
        if (props.containsKey('$PROP_HOME_DEBUG') && !props['$PROP_HOME_DEBUG'].toString().isBlank()) {
            usersHomeDirDebug = props['$PROP_HOME_DEBUGo']
        }
        if (props.containsKey('$PROP_HOME') && !props['$PROP_HOME'].toString().isBlank()) {
            usersHomeDir = props['$PROP_HOME']
        }
        if (props.containsKey('$PROP_PROGRAM') && !props['$PROP_PROGRAM'].toString().isBlank()) {
            rapidMinerDir = props['$PROP_PROGRAM']
        }
    }
}


// Third party library dependencies
dependencies {
    // https://mvnrepository.com/artifact/com.github.haifengl/smile-core
    compile group: 'com.github.haifengl', name: 'smile-core', version: '1.5.3'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    //Java 9+ libraries
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    compile group: 'org.openjfx', name: 'javafx-base', version: '13'
    compile group: 'javax.xml.ws', name: 'jaxws-api', version: '2.3.1'

    compile files('lib/Infosel.jar')
    compile files('lib/instanceselection.jar')
    compile files('lib/IS-CCIS.jar')
    compile files('lib/JavaMI.jar')
    compile files('lib/mdsj.jar')
    compile files('lib/rapidminer-Weka-5.3.002.jar')
    compile files('lib/weka.jar')

    providedCompile group: 'org.projectlombok', name: 'lombok', version: '1.18.10'

    runtime fileTree(dir: (rapidMinerDir.toString() + '/lib/'), include: '*.*')
}

task copyPluginDebug(type: Copy, dependsOn: jar) {
    description 'Copy jar file into RapidMiner extensions folder'
    println("$usersHomeDirDebug")
    println("$rapidMinerDir/lib")
    ["$usersHomeDirDebug"].each { dest ->
        copy { //Copy only files for debug. For full version required is install
            from jar
            into dest + "$EXTENSIONS_PATH"
        }
    }
}

task copyPlugin(type: Copy, dependsOn: installExtension) {
    description 'Copy jar file into RapidMiner extensions folder'
    ["$usersHomeDir", "$usersHomeDirDebug"].each { dest ->
        copy {
            from jar
            into dest + "$EXTENSIONS_PATH"
        }
    }
}

task run(type: JavaExec, dependsOn: copyPlugin) {
    description 'Executes RapidMiner'
    main = 'com.rapidminer.launcher.GUILauncher'
    classpath = configurations.runtime
    jvmArgs = ["-Duser.home=$usersHomeDir"]
}

task debug(type: JavaExec, dependsOn: copyPluginDebug) {
    description 'Executes RapidMiner in debug mode'
    main = 'com.rapidminer.launcher.GUILauncher'
    classpath = configurations.runtime
    jvmArgs = ["-Duser.home=$usersHomeDirDebug"]
    debug true
}
